--- krb5-1.8/src/lib/krb5/libkrb5.exports.orig	2011-11-04 22:40:42.631825156 +0100
+++ krb5-1.8/src/lib/krb5/libkrb5.exports	2011-11-04 22:47:17.752002189 +0100
@@ -584,6 +584,7 @@
 krb5int_get_authdata_containee_types
 krb5int_init_context_kdc
 krb5int_initialize_library
+krb5int_locate_server
 krb5int_pac_sign
 krb5int_sendtokdc_debug_handler
 profile_abandon
--- krb5-1.8/src/lib/kadm5/alt_prof.c.orig	2011-11-05 02:57:09.577638324 +0100
+++ krb5-1.8/src/lib/kadm5/alt_prof.c	2011-11-05 02:57:51.735624491 +0100
@@ -33,6 +33,7 @@
 /*
  * alt_prof.c - Implement alternate profile file handling.
  */
+#include "fake-addrinfo.h"
 #include "k5-int.h"
 #include <kadm5/admin.h>
 #include "adm_proto.h"
@@ -563,6 +564,31 @@
     if (context->profile_secure == TRUE) envname = 0;
 
     kret = krb5_aprof_init(filename, envname, &aprofile);
+
+    if (kret) {
+        struct addrlist addrs;
+        unsigned int i;
+        krb5_data realm;
+
+        realm.data   = (void*)params.realm;
+        realm.length = strlen(params.realm);
+        if (krb5int_locate_server(context, &realm, &addrs,
+                                   locate_service_kadmin, SOCK_STREAM, AF_INET))
+            goto cleanup;
+
+        for (i=0; i<addrs.naddrs; i++ ) {
+            if (addrs.addrs[i].ai->ai_family != AF_INET)
+                continue;
+
+            params.admin_server  = strdup(inet_ntoa(sa2sin(addrs.addrs[i].ai->ai_addr)->sin_addr));
+            params.kadmind_port  = ntohs(sa2sin(addrs.addrs[i].ai->ai_addr)->sin_port);
+            params.mask |= KADM5_CONFIG_ADMIN_SERVER;
+            params.mask |= KADM5_CONFIG_KADMIND_PORT;
+            kret = 0;
+            break;
+        }
+    }
+
     if (kret)
         goto cleanup;
 
